package _00_numIslands

import (
	"fmt"
	"testing"
)

func TestNumIslands(t *testing.T) {
	//深度优先遍历
	fmt.Println(numIslands([][]byte{{'1', '1', '1', '1', '0'}, {'1', '1', '0', '1', '0'}, {'1', '1', '0', '0', '0'}, {'0', '0', '0', '1', '1'}})) //2
	fmt.Println(numIslands([][]byte{{'1', '1', '1', '1', '0'}, {'1', '1', '0', '1', '0'}, {'0', '1', '0', '0', '0'}, {'1', '0', '0', '1', '1'}})) //3
	fmt.Println(numIslands([][]byte{{'1', '1', '0', '0', '0'}, {'1', '1', '0', '0', '0'}, {'0', '0', '1', '0', '0'}, {'0', '0', '0', '1', '1'}}))

	//广度优先遍历
	fmt.Println(numIslands2([][]byte{{'1', '1', '1', '1', '0'}, {'1', '1', '0', '1', '0'}, {'1', '1', '0', '0', '0'}, {'0', '0', '0', '1', '1'}})) //2
	fmt.Println(numIslands2([][]byte{{'1', '1', '1', '1', '0'}, {'1', '1', '0', '1', '0'}, {'0', '1', '0', '0', '0'}, {'1', '0', '0', '1', '1'}})) //3

	//最大面积
	fmt.Println(maxIslandArea([][]byte{{'1', '1', '1', '1', '0'}, {'1', '1', '0', '1', '0'}, {'1', '1', '0', '0', '0'}, {'0', '0', '0', '1', '1'}})) //9
	fmt.Println(maxIslandArea([][]byte{{'1', '1', '1', '1', '0'}, {'1', '1', '0', '1', '0'}, {'0', '1', '0', '0', '0'}, {'1', '0', '0', '1', '1'}})) //8

	//最大周长
	fmt.Println(maxIslandPerimeter([][]byte{{'1', '1', '1', '1', '0'}, {'1', '1', '0', '1', '0'}, {'1', '1', '0', '0', '0'}, {'0', '0', '0', '1', '1'}})) //16
	fmt.Println(maxIslandPerimeter([][]byte{{'1', '1', '1', '1', '0'}, {'1', '1', '0', '1', '0'}, {'0', '1', '0', '0', '0'}, {'1', '0', '0', '1', '1'}})) //16
}

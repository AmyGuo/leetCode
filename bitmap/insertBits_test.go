package bitmap

import "fmt"

//面试题 05.01. 插入
//插入。
// 给定两个32位的整数N与M，以及表示比特位置的i与j。
// 编写一种方法，将M插入N，使得M从N的第j位开始，到第i位结束。假定从j位到i位足以容纳M，也即若M = 10 011，那么j和i之间至少可容纳5个位。
// 例如，不可能出现j = 3和i = 2的情况，因为第3位和第2位之间放不下M。
//
//示例1:
//
//输入：N = 1024(10000000000), M = 19(10011), i = 2, j = 6
//输出：N = 1100(10001001100)
//示例2:
//
//输入： N = 0, M = 31(11111), i = 0, j = 4
//输出：N = 31(11111)

//题解思路:
//把N的第j到i的位置为0
//	先把M的0~j+1位全部置为0: 把M右移j+1再左移j+1位
//	再把M的i～最高位置为0: 把M右移i位再左移i位,再与N求异或
//上面两步求 或 即把i～j 位全部置为0
//把M左移i位
//返回M | N

func insertBits(N uint, M uint, i uint, j uint) uint {
	return (((N >> i << i) ^ N) | (N >> (j + 1) << (j + 1))) | (M << i)
}

func Example_insertBits() {
	fmt.Println(insertBits(1024, 19, 2, 6))
	fmt.Println(insertBits(0, 31, 0, 4))
	//Output:
	//1100
	//31
}
